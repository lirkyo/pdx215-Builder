version: 2.1

# 定义执行环境
executors:
  android_builder:
    docker:
      - image: ghcr.io/satorugojo2k23/ubuntu:latest
    resource_class: 2xlarge+ # 8 vCPU, 32GB RAM
    working_directory: ~/work

# 定义构建作业
jobs:
  build:
    executor: android_builder
    no_output_timeout: 240m # 对应原始配置中的 timeout_in
    environment:
      MANIFEST: https://github.com/RisingOS-Revived/android -b qpr2 --git-lfs
      OEM: sony
      DEVICE: pdx215
      COMMON: sm8350-common
      # 设备树
      DT_LINK: https://github.com/lirkyo/device_sony_pdx215 -b RisingOS
      DT_PATH: device/$OEM/$DEVICE
      # 通用设备树 (修正了原始链接)
      DCT_LINK: https://github.com/lirkyo/device_sony_sm8350-common -b RisingOS
      DCT_PATH: device/$OEM/$COMMON
      # Vendor
      VT_LINK: https://github.com/TheMuppets/proprietary_vendor_sony_pdx215 -b lineage-22.2
      VT_PATH: vendor/$OEM/$DEVICE
      # 通用 Vendor (修正了路径变量名 VCI_PATH -> VCT_PATH)
      VCT_LINK: https://github.com/TheMuppets/proprietary_vendor_sony_sm8350-common -b lineage-22.2
      VCT_PATH: vendor/$OEM/$COMMON
      # 硬件抽象层
      HW_LINK: https://github.com/lirkyo/hardware_sony -b fifteen
      HW_PATH: hardware/$OEM
      # 内核
      KT_LINK: https://github.com/LineageOS/android_kernel_sony_sm8350 -b lineage-22.2
      KT_PATH: kernel/$OEM/sm8350
      # 额外 Vendor
      SE_LINK: https://github.com/lirkyo/vendor_sony_extra -b fifteen
      SE_PATH: vendor/$OEM/extra
      # 构建目标
      TARGET: mka bacon
      EXTRA_CMD: export SKIP_ABI_CHECKS=true
      OUTPUT: RisingOS*.zip
    steps:
      - checkout

      - run:
          name: "检查存储空间"
          command: |
            df -h
            lsblk
            ls -l -a -h

      - run:
          name: "同步源码"
          command: |
            echo "============================"
            echo "Syncing The Sources..."
            echo "============================"
            repo init --depth=1 -u $MANIFEST
            repo sync -c --no-clone-bundle --force-sync --no-tags --optimized-fetch --prune -j8
            git clone --depth=1 $DT_LINK $DT_PATH
            git clone --depth=1 $DCT_LINK $DCT_PATH
            git clone --depth=1 $KT_LINK $KT_PATH
            git clone --depth=1 $VT_LINK $VT_PATH
            git clone --depth=1 $VCT_LINK $VCT_PATH
            git clone --depth=1 $SE_LINK $SE_PATH
            git clone --depth=1 $HW_LINK $HW_PATH
            echo "============================"
            echo "Adding Patches!"
            echo "============================"
            echo "============================"
            echo "Syncing Complete!"
            echo "============================"

      - run:
          name: "开始构建"
          command: |
            echo "============================"
            echo "Starting the Build..."
            echo "============================"
            $EXTRA_CMD
            export USE_CCACHE=1
            export CCACHE_EXEC=/usr/bin/ccache
            ccache -M 50G
            . build/envsetup.sh
            riseup pdx215 userdebug
            gk -s
            rise fb

      - run:
          name: "上传构建产物"
          command: |
            echo "============================"
            echo "Uploading the Build..."
            echo "============================"
            cd out/target/product/"$DEVICE"
            ls -lh
            pwd
            chmod 777 *
            curl --upload-file $(echo $OUTPUT) https://transfer.sh | tee link.txt && echo " "
            echo " "
            echo "============================"
            echo "Build Uploaded!"
            echo "Please see the link Below-  "
            echo "----------------------------"
            cat link.txt && echo " "
            echo "============================"

# 定义工作流
workflows:
  version: 2
  build-rom:
    jobs:
      - build
